{"version":3,"sources":["../../react-readonly-codemirror6/src/getLanguageExtension.js","../../react-readonly-codemirror6/index.jsx","code.js","App.js","refSource.js","reportWebVitals.js","index.js"],"names":["getLanguageExtension","language","lang","replace","javascript","jsx","json","css","html","StreamLanguage","define","dockerFile","shell","plSQL","yaml","python","xml","go","console","warn","noPasteExtension","domEventHandlers","paste","event","preventDefault","code","fontSize","editorParentRef","editorRef","current","view","parent","dom","style","state","create","doc","extensions","editable","of","lineWrapping","initState","setState","destroy","js","plsql","java","rust","php","cpp","dockerfile","markdown","App","ref","useRocm","refCss","refPlsql","refHtml","refXml","refGo","refPython","refYaml","refDockerfile","refBash","refJson","refSrc","className","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAkEeA,MArDf,SAA8BC,GAE5B,IAAMC,EAAOD,EAAWA,EAASE,QAAT,YAA8B,IAAM,KAC5D,OAAQD,GACN,IAAK,aACL,IAAK,KACH,OAAOE,cACT,IAAK,MACH,OAAOA,YAAW,CAAEC,KAAK,IAC3B,IAAK,OACH,OAAOC,cACT,IAAK,MACH,OAAOC,cACT,IAAK,OACH,OAAOC,cACT,IAAK,aACH,OAAOC,IAAeC,OAAOC,KAC/B,IAAK,KACL,IAAK,OACL,IAAK,UACL,IAAK,QACL,IAAK,MACL,IAAK,MACH,OAAOF,IAAeC,OAAOE,KAC/B,IAAK,MACL,IAAK,QACL,IAAK,SACH,OAAOH,IAAeC,OAAOG,KAC/B,IAAK,OACL,IAAK,MACH,OAAOJ,IAAeC,OAAOI,KAC/B,IAAK,KACL,IAAK,SACH,OAAOL,IAAeC,OAAOK,KAC/B,IAAK,MACH,OAAON,IAAeC,OAAOM,KAC/B,IAAK,KACL,IAAK,SACH,OAAOP,IAAeC,OAAOO,KAI/B,QAOE,OANIf,GAEFgB,QAAQC,KAAR,+CAC0CjB,EAD1C,mCAIKO,IAAeC,OAAOE,OCxDnC,MAAMQ,EAAmB,IAAWC,iBAAiB,CACnDC,MAAQC,IAENA,EAAMC,kBACC,KAsDI,MA5BC,EAAGC,OAAMvB,OAAMwB,eAC7B,MAAMC,EAAkB,iBAAO,MACzBC,EAAY,iBAAO,MAuBzB,OApBA,qBAAU,KACR,IAAKA,EAAUC,QAAS,CACtB,MAAMC,GA7BWC,EA6BUJ,EA5BxB,IAAI,IAAW,CACpBI,OAAQA,EAAOF,WA4BbC,EAAKE,IAAIC,MAAMP,SAAW,GAAGA,MAC7BE,EAAUC,QAAUC,EAEpB,MAAMI,EA3BZ,UAAmB,KAAET,EAAI,KAAEvB,IACzB,MAAMD,EAAW,EAAqBC,GAEtC,OAAO,IAAYiC,OAAO,CACxBC,IAAKX,EACLY,WAAY,CACVjB,EACA,IACA,IACAnB,EACA,IAAWqC,SAASC,IAAG,GACvB,IAAWC,gBAgBGC,CAAU,CACtBvC,OACAuB,SAIF,OAFAK,EAAKY,SAASR,GAEP,KACLJ,EAAKa,WAxCb,IAAuBZ,EA4CnB,MAAO,IAAM,OACZ,CAACH,EAAWD,EAAiBF,EAAMC,EAAUxB,IAEzCyB,GC+CMF,G,MA5GF,CACXmB,GAAG,4FAMHrC,IAAI,gKAUJsC,MAAM,sHAQNrC,KAAK,kEAILQ,IAAI,yGAMJ8B,KAAK,kHAKL/B,OAAO,mEAMPgC,KAAK,+CAILC,IAAI,gCAGJC,IAAI,sGAOJhC,GAAG,iFAOHL,MAAM,+EAKNsC,WAAW,0GAOXpC,KAAK,oKAWLR,KAAK,uLAWL6C,SAAS,4E,QC+CIC,MA/If,WACE,IAAMC,EAAMC,EAAQ,CAClB7B,KAAMA,EAAKmB,GACX1C,KAAM,KACNwB,SAAU,KAGN6B,EAASD,EAAQ,CACrB7B,KAAMA,EAAKlB,IACXL,KAAM,MACNwB,SAAU,KAGN8B,EAAWF,EAAQ,CACvB7B,KAAMA,EAAKoB,MACX3C,KAAM,QACNwB,SAAU,KAGN+B,EAAUH,EAAQ,CACtB7B,KAAMA,EAAKjB,KACXN,KAAM,OACNwB,SAAU,KAGNgC,EAASJ,EAAQ,CACrB7B,KAAMA,EAAKT,IACXd,KAAM,MACNwB,SAAU,KAGNiC,EAAQL,EAAQ,CACpB7B,KAAMA,EAAKR,GACXf,KAAM,KACNwB,SAAU,KAGNkC,EAAYN,EAAQ,CACxB7B,KAAMA,EAAKV,OACXb,KAAM,SACNwB,SAAU,KAGNmC,EAAUP,EAAQ,CACtB7B,KAAMA,EAAKX,KACXZ,KAAM,OACNwB,SAAU,KAGNoC,EAAgBR,EAAQ,CAC5B7B,KAAMA,EAAKyB,WACXhD,KAAM,aACNwB,SAAU,KAGNqC,EAAUT,EAAQ,CACtB7B,KAAMA,EAAKb,MACXV,KAAM,OACNwB,SAAU,KAGNsC,EAAUV,EAAQ,CACtB7B,KAAMA,EAAKnB,KACXJ,KAAM,OACNwB,SAAU,KAGNuC,EAASX,EAAQ,CACrB7B,KCzEQ,ilCD0ERvB,KAAM,MACNwB,SAAU,KAGZ,OACE,sBAAKwC,UAAU,WAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,oBAAIA,UAAU,cAAd,qCAEF,uBAAMA,UAAU,WAAhB,UACE,sBAAKjC,MAAO,CAAEkC,UAAW,QAAzB,UACE,4CACA,qBAAKd,IAAKA,OAGZ,sBAAKpB,MAAO,CAAEkC,UAAW,QAAzB,UACE,6CACA,qBAAKd,IAAKE,OAGZ,sBAAKtB,MAAO,CAAEkC,UAAW,QAAzB,UACE,qDACA,qBAAKd,IAAKG,OAGZ,sBAAKvB,MAAO,CAAEkC,UAAW,QAAzB,UACE,sCACA,qBAAKd,IAAKI,OAGZ,sBAAKxB,MAAO,CAAEkC,UAAW,QAAzB,UACE,qCACA,qBAAKd,IAAKK,OAGZ,sBAAKzB,MAAO,CAAEkC,UAAW,QAAzB,UACE,oCACA,qBAAKd,IAAKM,OAGZ,sBAAK1B,MAAO,CAAEkC,UAAW,QAAzB,UACE,wCACA,qBAAKd,IAAKO,OAGZ,sBAAK3B,MAAO,CAAEkC,UAAW,QAAzB,UACE,sCACA,qBAAKd,IAAKQ,OAGZ,sBAAK5B,MAAO,CAAEkC,UAAW,QAAzB,UACE,4CACA,qBAAKd,IAAKS,OAGZ,sBAAK7B,MAAO,CAAEkC,UAAW,QAAzB,UACE,4CACA,qBAAKd,IAAKU,OAGZ,sBAAK9B,MAAO,CAAEkC,UAAW,QAAzB,UACE,6CACA,qBAAKd,IAAKW,OAGZ,sBAAK/B,MAAO,CAAEkC,UAAW,QAAzB,UACE,wCACA,qBAAKd,IAAKY,cEjILG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2dd2831f.chunk.js","sourcesContent":["import { css } from '@codemirror/lang-css';\nimport { html } from '@codemirror/lang-html';\nimport { javascript } from '@codemirror/lang-javascript';\nimport { json } from '@codemirror/lang-json';\nimport { StreamLanguage } from '@codemirror/language';\nimport { dockerFile } from '@codemirror/legacy-modes/mode/dockerfile';\nimport { go } from '@codemirror/legacy-modes/mode/go';\nimport { python } from '@codemirror/legacy-modes/mode/python';\nimport { shell } from '@codemirror/legacy-modes/mode/shell';\nimport { plSQL } from '@codemirror/legacy-modes/mode/sql';\nimport { xml } from '@codemirror/legacy-modes/mode/xml';\nimport { yaml } from '@codemirror/legacy-modes/mode/yaml';\n\nfunction getLanguageExtension(language) {\n  // https://github.com/codemirror/legacy-modes\n  const lang = language ? language.replace(`language-`, '') : null;\n  switch (lang) {\n    case 'javascript':\n    case 'js':\n      return javascript();\n    case 'jsx':\n      return javascript({ jsx: true });\n    case 'json':\n      return json();\n    case 'css':\n      return css();\n    case 'html':\n      return html();\n    case 'dockerfile':\n      return StreamLanguage.define(dockerFile);\n    case 'sh':\n    case 'bash':\n    case 'service':\n    case 'shell':\n    case 'zsh':\n    case 'txt':\n      return StreamLanguage.define(shell);\n    case 'sql':\n    case 'plsql':\n    case 'pl/sql':\n      return StreamLanguage.define(plSQL);\n    case 'yaml':\n    case 'yml':\n      return StreamLanguage.define(yaml);\n    case 'py':\n    case 'python':\n      return StreamLanguage.define(python);\n    case 'xml':\n      return StreamLanguage.define(xml);\n    case 'go':\n    case 'golang':\n      return StreamLanguage.define(go);\n    // case 'md':\n    // case 'markdown':\n    //   return markdown();\n    default:\n      if (lang) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `Unhandeled language for CodeMirror: \"${lang}\". Fallback to default \"shell\"`,\n        );\n      }\n      return StreamLanguage.define(shell);\n  }\n}\n\nexport default getLanguageExtension;\n","import { EditorView, basicSetup } from 'codemirror';\nimport { EditorState } from '@codemirror/state';\nimport { oneDark } from '@codemirror/theme-one-dark';\nimport { useEffect, useRef } from 'react';\nimport getLanguageExtension from './src/getLanguageExtension';\n\nconst noPasteExtension = EditorView.domEventHandlers({\n  paste: (event) => {\n    // Prevent the default paste action\n    event.preventDefault();\n    return true; // This indicates that the event has been handled\n  },\n});\n\nfunction getEditorView(parent) {\n  return new EditorView({\n    parent: parent.current,\n  });\n}\n\nfunction initState({ code, lang }) {\n  const language = getLanguageExtension(lang);\n\n  return EditorState.create({\n    doc: code,\n    extensions: [\n      noPasteExtension,\n      basicSetup,\n      oneDark,\n      language,\n      EditorView.editable.of(false),\n      EditorView.lineWrapping,\n    ],\n  });\n}\n\nconst useRocm = ({ code, lang, fontSize }) => {\n  const editorParentRef = useRef(null);\n  const editorRef = useRef(null);\n\n  // Initilize view\n  useEffect(() => {\n    if (!editorRef.current) {\n      const view = getEditorView(editorParentRef);\n      view.dom.style.fontSize = `${fontSize}px`;\n      editorRef.current = view;\n\n      const state = initState({\n        lang,\n        code,\n      });\n      view.setState(state);\n\n      return () => {\n        view.destroy();\n      };\n    }\n\n    return () => null;\n  }, [editorRef, editorParentRef, code, fontSize, lang]);\n\n  return editorParentRef;\n};\n\nexport default useRocm;\n","const code = {\n  js: `const x = 1;\n  console.log(x + 1 + 'test');\n  \n  function test() {\n    return 1;\n  }`,\n  css: `.App-header {\n    background-color: #415c94;\n    color: #fff;\n    margin-bottom: 12px;\n  }\n  \n  .header-text {\n    padding: 12px;\n    margin: 0;\n  }`,\n  plsql: `insert into table (id, name) values (1, 'test');\n\nbegin\n  null;\nexception\n  when others then\n    raise;\nend;`,\n  html: `<div>\n  <h1 class=\"font-bold\">Test</h1>\n  <p>Test</p>\n</div>`,\n  xml: `<drivers>\n  <driver>\n    <name age=\"30\">John</name>\n    <car>McLaren</car>\n  </driver>\n</drivers>`,\n  java: `public class Test {\n  public static void main(String[] args) {\n    System.out.println(\"Hello World\");\n  }\n}`, // java does not work\n  python: `import os\nimport sys\n\ndef main():\n  print(\"Hello World\")\n  `, // python does not work\n  rust: `fn main() {\n  println!(\"Hello World\");\n}\n`, // rust does not work\n  php: `<?php\necho \"Hello World\";#\n`, // php does not work\n  cpp: `#include <iostream>\nusing namespace std;\n\nint main() {\n  cout << \"Hello World\";\n  return 0;\n}`,\n  go: `package main\n\nimport \"fmt\"\n\nfunc main() {\n  fmt.Println(\"Hello World\")\n}`,\n  shell: `#!/bin/bash\necho \"Hello World\"\nps -ef | grep \"test\"\nsudo apt-get update\n`,\n  dockerfile: `FROM node:alpine\nWORKDIR /usr/src/app\nCOPY package*.json ./\nRUN npm install\nCOPY . .\nEXPOSE 3000\n`,\n  yaml: `version: '3'\nservices:\n  web:\n    build: .\n    ports:\n      - \"5000:5000\"\n    volumes:\n      - .:/code\n    environment:\n      FLASK_ENV: development\n`,\n  json: `{\n  \"name\": \"test\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"start\": \"node index.js\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\"\n}`,\n  markdown: `# Hello World\n## Hello World\n\n- test\n[link](https://www.google.com)`,\n};\n\nexport default code;\n","import useRocm from \"react-readonly-codemirror6\";\nimport \"./App.css\";\nimport code from \"./code.js\";\nimport refSource from \"./refSource.js\";\n\nfunction App() {\n  const ref = useRocm({\n    code: code.js,\n    lang: \"js\",\n    fontSize: 14,\n  });\n\n  const refCss = useRocm({\n    code: code.css,\n    lang: \"css\",\n    fontSize: 16,\n  });\n\n  const refPlsql = useRocm({\n    code: code.plsql,\n    lang: \"plsql\",\n    fontSize: 22,\n  });\n\n  const refHtml = useRocm({\n    code: code.html,\n    lang: \"html\",\n    fontSize: 14,\n  });\n\n  const refXml = useRocm({\n    code: code.xml,\n    lang: \"xml\",\n    fontSize: 14,\n  });\n\n  const refGo = useRocm({\n    code: code.go,\n    lang: \"go\",\n    fontSize: 14,\n  });\n\n  const refPython = useRocm({\n    code: code.python,\n    lang: \"python\",\n    fontSize: 14,\n  });\n\n  const refYaml = useRocm({\n    code: code.yaml,\n    lang: \"yaml\",\n    fontSize: 14,\n  });\n\n  const refDockerfile = useRocm({\n    code: code.dockerfile,\n    lang: \"dockerfile\",\n    fontSize: 14,\n  });\n\n  const refBash = useRocm({\n    code: code.shell,\n    lang: \"bash\",\n    fontSize: 14,\n  });\n\n  const refJson = useRocm({\n    code: code.json,\n    lang: \"json\",\n    fontSize: 10,\n  });\n\n  const refSrc = useRocm({\n    code: refSource,\n    lang: \"jsx\",\n    fontSize: 14,\n  });\n\n  return (\n    <div className=\"body-div\">\n      <header className=\"App-header\">\n        <h1 className=\"header-text\">React Codemirror Demo</h1>\n      </header>\n      <main className=\"main-div\">\n        <div style={{ marginTop: \"32px\" }}>\n          <h2>JS - 14 px</h2>\n          <div ref={ref} />\n        </div>\n\n        <div style={{ marginTop: \"32px\" }}>\n          <h2>CSS - 16 px</h2>\n          <div ref={refCss} />\n        </div>\n\n        <div style={{ marginTop: \"32px\" }}>\n          <h2>SQL (Oracle) - 22px</h2>\n          <div ref={refPlsql} />\n        </div>\n\n        <div style={{ marginTop: \"32px\" }}>\n          <h2>HTML</h2>\n          <div ref={refHtml} />\n        </div>\n\n        <div style={{ marginTop: \"32px\" }}>\n          <h2>XML</h2>\n          <div ref={refXml} />\n        </div>\n\n        <div style={{ marginTop: \"32px\" }}>\n          <h2>Go</h2>\n          <div ref={refGo} />\n        </div>\n\n        <div style={{ marginTop: \"32px\" }}>\n          <h2>Python</h2>\n          <div ref={refPython} />\n        </div>\n\n        <div style={{ marginTop: \"32px\" }}>\n          <h2>YAML</h2>\n          <div ref={refYaml} />\n        </div>\n\n        <div style={{ marginTop: \"32px\" }}>\n          <h2>Dockerfile</h2>\n          <div ref={refDockerfile} />\n        </div>\n\n        <div style={{ marginTop: \"32px\" }}>\n          <h2>Bash/Shell</h2>\n          <div ref={refBash} />\n        </div>\n\n        <div style={{ marginTop: \"32px\" }}>\n          <h2>JSON - 10px</h2>\n          <div ref={refJson} />\n        </div>\n\n        <div style={{ marginTop: \"64px\" }}>\n          <h2>Source</h2>\n          <div ref={refSrc} />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const refsrc = `\nimport useRocm from \"react-readonly-codemirror6\";\nimport \"./App.css\";\n\nconst code = \\`const x = 1;\nconsole.log(x + 1 + 'test');\\`;\n\nfunction App() {\n  const ref = useRocm({\n    code: code,\n    lang: \"js\",\n    fontSize: 14,\n  });\n\n  const refCss = useRocm({\n    code: \\`.App-header {\n  background-color: #415c94;\n  color: #fff;\n  margin-bottom: 12px;\n}\n\n.header-text {\n  padding: 12px;\n  margin: 0;\n}\\`,\n    lang: \"css\",\n    fontSize: 16,\n  });\n\n  const refPlsql = useRocm({\n    code: \\`insert into table (id, name) values (1, 'test');\\`,\n    langExtension: \"plsql\",\n    fontSize: 22,\n  });\n\n  return (\n    <div className=\"body-div\">\n      <header className=\"App-header\">\n        <h1 className=\"header-text\">React Codemirror Demo</h1>\n      </header>\n      <main className=\"main-div\">\n        <div ref={ref} />\n\n        <div style={{ marginTop: \"32px\" }}>\n          <div ref={refCss} />\n        </div>\n\n        <div style={{ marginTop: \"32px\" }}>\n          <div ref={refPlsql} />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n`;\n\nexport default refsrc;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}