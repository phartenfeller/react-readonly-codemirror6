{"version":3,"sources":["../../react-readonly-codemirror6/src/getLanguageExtension.js","../../react-readonly-codemirror6/index.jsx","App.js","refSource.js","reportWebVitals.js","index.js"],"names":["getLanguageExtension","language","lang","replace","javascript","jsx","json","css","html","StreamLanguage","define","dockerFile","shell","plSQL","yaml","console","warn","getFontsizeTheme","size","theme","fontSize","code","editorParentRef","editorRef","current","view","parent","state","create","doc","extensions","fallback","editable","of","initState","setState","destroy","App","ref","useRocm","refCss","refPlsql","refSrc","className","style","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAkDeA,MAxCf,SAA8BC,GAE5B,IAAMC,EAAOD,EAAWA,EAASE,QAAT,YAA8B,IAAM,KAC5D,OAAQD,GACN,IAAK,aACL,IAAK,KACH,OAAOE,cACT,IAAK,MACH,OAAOA,YAAW,CAAEC,KAAK,IAC3B,IAAK,OACH,OAAOC,cACT,IAAK,MACH,OAAOC,cACT,IAAK,OACH,OAAOC,cACT,IAAK,aACH,OAAOC,IAAeC,OAAOC,KAC/B,IAAK,KACL,IAAK,OACL,IAAK,UACL,IAAK,QACH,OAAOF,IAAeC,OAAOE,KAC/B,IAAK,MACL,IAAK,QACL,IAAK,SACH,OAAOH,IAAeC,OAAOG,KAC/B,IAAK,OACL,IAAK,MACH,OAAOJ,IAAeC,OAAOI,KAC/B,QAOE,OANIZ,GAEFa,QAAQC,KAAR,+CAC0Cd,EAD1C,sCAIKE,gBC3Bb,SAASa,EAAiBC,EAAO,IAC/B,OAAO,IAAWC,MAAM,CACtB,IAAK,CACHC,SAAU,GAAGF,SAqDJ,MA9BC,EAAGG,OAAMnB,OAAMkB,eAC7B,MAAME,EAAkB,iBAAO,MACzBC,EAAY,iBAAO,MAyBzB,OAtBA,qBAAU,KACR,IAAKA,EAAUC,QAAS,CACtB,MAAMC,GAxCWC,EAwCUJ,EAvCxB,IAAI,IAAW,CACpBI,OAAQA,EAAOF,WAuCbD,EAAUC,QAAUC,EAGpB,MAAME,EA7BZ,UAAmB,KAAEN,EAAI,KAAEnB,EAAI,SAAEkB,IAE/B,MAAMnB,EAAW,EAAqBC,GAEtC,OAAO,IAAY0B,OAAO,CACxBC,IAAKR,EACLS,WAAY,CACV,cACA7B,EACA,IACA,IACAgB,EAAiBG,GACjB,IAAsBW,SACtB,IAAWC,SAASC,IAAG,MAgBTC,CAAU,CACtBhC,OACAmB,OACAD,aAKF,OAFAK,EAAKU,SAASR,GAEP,KACLF,EAAKW,WArDb,IAAuBV,EAyDnB,MAAO,IAAM,OACZ,CAACH,EAAWD,EAAiBD,EAAMD,EAAUlB,IAEzCoB,G,gBCNMe,MA3Df,WACE,IAAMC,EAAMC,EAAQ,CAClBlB,KALM,6CAMNnB,KAAM,KACNkB,SAAU,KAGNoB,EAASD,EAAQ,CACrBlB,KAAK,8IAULnB,KAAM,MACNkB,SAAU,KAGNqB,EAAWF,EAAQ,CACvBlB,KAAK,mDACLnB,KAAM,QACNkB,SAAU,KAGNsB,EAASH,EAAQ,CACrBlB,KCpCQ,ilCDqCRnB,KAAM,MACNkB,SAAU,KAGZ,OACE,sBAAKuB,UAAU,WAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,oBAAIA,UAAU,cAAd,qCAEF,uBAAMA,UAAU,WAAhB,UACE,qBAAKL,IAAKA,IAEV,qBAAKM,MAAO,CAAEC,UAAW,QAAzB,SACE,qBAAKP,IAAKE,MAGZ,qBAAKI,MAAO,CAAEC,UAAW,QAAzB,SACE,qBAAKP,IAAKG,MAGZ,sBAAKG,MAAO,CAAEC,UAAW,QAAzB,UACE,wCACA,qBAAKP,IAAKI,cE/CLI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.580063cf.chunk.js","sourcesContent":["import { css } from '@codemirror/lang-css';\nimport { html } from '@codemirror/lang-html';\nimport { javascript } from '@codemirror/lang-javascript';\nimport { json } from '@codemirror/lang-json';\nimport { dockerFile } from '@codemirror/legacy-modes/mode/dockerfile';\nimport { shell } from '@codemirror/legacy-modes/mode/shell';\nimport { plSQL } from '@codemirror/legacy-modes/mode/sql';\nimport { yaml } from '@codemirror/legacy-modes/mode/yaml';\nimport { StreamLanguage } from '@codemirror/stream-parser';\n\nfunction getLanguageExtension(language) {\n  // https://github.com/codemirror/legacy-modes\n  const lang = language ? language.replace(`language-`, '') : null;\n  switch (lang) {\n    case 'javascript':\n    case 'js':\n      return javascript();\n    case 'jsx':\n      return javascript({ jsx: true });\n    case 'json':\n      return json();\n    case 'css':\n      return css();\n    case 'html':\n      return html();\n    case 'dockerfile':\n      return StreamLanguage.define(dockerFile);\n    case 'sh':\n    case 'bash':\n    case 'service':\n    case 'shell':\n      return StreamLanguage.define(shell);\n    case 'sql':\n    case 'plsql':\n    case 'pl/sql':\n      return StreamLanguage.define(plSQL);\n    case 'yaml':\n    case 'yml':\n      return StreamLanguage.define(yaml);\n    default:\n      if (lang) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `Unhandeled language for CodeMirror: \"${lang}\". Fallback to default JavaScript`\n        );\n      }\n      return javascript();\n  }\n}\n\nexport default getLanguageExtension;\n","import { EditorView } from '@codemirror/view';\nimport { lineNumbers } from '@codemirror/gutter';\nimport { defaultHighlightStyle } from '@codemirror/highlight';\nimport { EditorState } from '@codemirror/state';\nimport {\n  oneDarkHighlightStyle,\n  oneDarkTheme,\n} from '@codemirror/theme-one-dark';\n// eslint-disable-next-line import/no-unresolved\nimport { useEffect, useRef } from 'react';\nimport getLanguageExtension from './src/getLanguageExtension';\n\nfunction getEditorView(parent) {\n  return new EditorView({\n    parent: parent.current,\n    // lineWrapping: true,\n  });\n}\n\nfunction getFontsizeTheme(size = 14) {\n  return EditorView.theme({\n    '&': {\n      fontSize: `${size}px`,\n    },\n  });\n}\n\nfunction initState({ code, lang, fontSize }) {\n  // const lg = langExtension();\n  const language = getLanguageExtension(lang);\n\n  return EditorState.create({\n    doc: code,\n    extensions: [\n      lineNumbers(),\n      language,\n      oneDarkTheme,\n      oneDarkHighlightStyle,\n      getFontsizeTheme(fontSize),\n      defaultHighlightStyle.fallback,\n      EditorView.editable.of(false),\n    ],\n  });\n}\n\nconst useRocm = ({ code, lang, fontSize }) => {\n  const editorParentRef = useRef(null);\n  const editorRef = useRef(null);\n\n  // Initilize view\n  useEffect(() => {\n    if (!editorRef.current) {\n      const view = getEditorView(editorParentRef);\n      editorRef.current = view;\n      // setEditorView(view);\n\n      const state = initState({\n        lang,\n        code,\n        fontSize,\n        // extionsions: extensions,\n      });\n      view.setState(state);\n\n      return () => {\n        view.destroy();\n      };\n    }\n\n    return () => null;\n  }, [editorRef, editorParentRef, code, fontSize, lang]);\n\n  return editorParentRef;\n};\n\nexport default useRocm;\n","import useRocm from \"react-readonly-codemirror6\";\nimport \"./App.css\";\nimport refSource from \"./refSource.js\";\n\nconst code = `const x = 1;\nconsole.log(x + 1 + 'test');`;\n\nfunction App() {\n  const ref = useRocm({\n    code: code,\n    lang: \"js\",\n    fontSize: 14,\n  });\n\n  const refCss = useRocm({\n    code: `.App-header {\n  background-color: #415c94;\n  color: #fff;\n  margin-bottom: 12px;\n}\n\n.header-text {\n  padding: 12px;\n  margin: 0;\n}`,\n    lang: \"css\",\n    fontSize: 16,\n  });\n\n  const refPlsql = useRocm({\n    code: `insert into table (id, name) values (1, 'test');`,\n    lang: \"plsql\",\n    fontSize: 22,\n  });\n\n  const refSrc = useRocm({\n    code: refSource,\n    lang: \"jsx\",\n    fontSize: 14,\n  });\n\n  return (\n    <div className=\"body-div\">\n      <header className=\"App-header\">\n        <h1 className=\"header-text\">React Codemirror Demo</h1>\n      </header>\n      <main className=\"main-div\">\n        <div ref={ref} />\n\n        <div style={{ marginTop: \"32px\" }}>\n          <div ref={refCss} />\n        </div>\n\n        <div style={{ marginTop: \"32px\" }}>\n          <div ref={refPlsql} />\n        </div>\n\n        <div style={{ marginTop: \"64px\" }}>\n          <h2>Source</h2>\n          <div ref={refSrc} />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const refsrc = `\nimport useRocm from \"react-readonly-codemirror6\";\nimport \"./App.css\";\n\nconst code = \\`const x = 1;\nconsole.log(x + 1 + 'test');\\`;\n\nfunction App() {\n  const ref = useRocm({\n    code: code,\n    lang: \"js\",\n    fontSize: 14,\n  });\n\n  const refCss = useRocm({\n    code: \\`.App-header {\n  background-color: #415c94;\n  color: #fff;\n  margin-bottom: 12px;\n}\n\n.header-text {\n  padding: 12px;\n  margin: 0;\n}\\`,\n    lang: \"css\",\n    fontSize: 16,\n  });\n\n  const refPlsql = useRocm({\n    code: \\`insert into table (id, name) values (1, 'test');\\`,\n    langExtension: \"plsql\",\n    fontSize: 22,\n  });\n\n  return (\n    <div className=\"body-div\">\n      <header className=\"App-header\">\n        <h1 className=\"header-text\">React Codemirror Demo</h1>\n      </header>\n      <main className=\"main-div\">\n        <div ref={ref} />\n\n        <div style={{ marginTop: \"32px\" }}>\n          <div ref={refCss} />\n        </div>\n\n        <div style={{ marginTop: \"32px\" }}>\n          <div ref={refPlsql} />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n`;\n\nexport default refsrc;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}